Fake News is a type of 'yellow journalism' in the sense that it comprises pieces of news that may be hoaxes. This is then spread via popular social media websites and serves the purpose of furthering or imposing certain ideas. Such news items contain exaggerated claims, and may end up being viralized by algorithms.
We will start by making the necessary imports

import pandas as pd
import numpy as np
import itertools
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix
df=pd.read_csv(r"C:\Users\USER\Downloads\data.csv.zip")

#Get shape and head
df.shape
df.head()
df.describe()
df.isnull().values.any()
df.isnull()
labels=df.Label
labels.head()
df=df.dropna()

y = df.Label
X = df.Body
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=0)
from sklearn.linear_model import LogisticRegression
tfidf_vectorizer=TfidfVectorizer(stop_words='english', max_df=0.7)

#Fit and transform train set, transform test set

tfidf_train=tfidf_vectorizer.fit_transform(X_train) 
tfidf_test=tfidf_vectorizer.transform(X_test)

#Initializing a "PassiveAggressiveClassifier"
pac=PassiveAggressiveClassifier(max_iter=50)
pac.fit(tfidf_train,y_train)
#DataFlair - Predict on the test set and calculate accuracy
y_pred=pac.predict(tfidf_test)
score=accuracy_score(y_test,y_pred)
print(f'Accuracy: {round(score*100,2)}%')
y_pred
